Развертывание на сервере
========================

Подразумевается использование ZEO. Если ZEO-сервер еще не поднят,
то это нужно сделать, см. ``zeo-server.txt``

Само же приложение в единственном или множественном числе развертывается
как WSGI-приолжение, использующее ZEO-клиент.

1) Нужно воздерживаться от использования веток из системы контроля
версий, пусть бы и распределенной. При отметке нового релиз-тэга
создается архив и загружается на продакшн-сервер, на чистое место.

При использовании GitHub можно брать wget'ом автоматически создаваемые
архивы релизов по известному URL'у. При распаковке из архива код будет
лежать как bbru-1.x.x, т.е. версию сразу видно.

2) При этом предыдущий код еще продолжает работать.

3) После распаковки необходимо собрать WSGI-приложение с ZEO-клиентом:

  $ python bootstrap.py
  $ bin/buildout -c deploy.cfg

4) Предварительно прогнав тесты, запустить приложение в режиме UNIX демона:

  $ bin/test
  $ bin/paster serve --daemon deploy.ini

5) Остановить предыдущую версию приложения и удалить ее (rm -r). Поскольку
используется ZEO-клиент, то никакой ценной информации там нет. За исключением
логов, но они есть и в полном варианте у ZEO-сервера.

Другие опции:

  $ bin/paster serve --status deploy.ini  #осведомиться о состоянии процесса
  $ bin/paster serve --stop-daemon        #остановить демонизированный процесс

С другими опциями можно ознакомиться в встроенной справке:

  $ bin/paster serve --help
